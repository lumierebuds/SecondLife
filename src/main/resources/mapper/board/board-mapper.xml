<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<insert id="insertBoard" parameterType="board" useGeneratedKeys="true">
	
		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO BOARD
		VALUES(
			SEQ_BOARD_NO.CURRVAL,
			#{categoryNo},
			#{boardWriter},
			#{tradeCategoryNo},
			#{productName},
			#{price},
			#{condition},
			#{content},
			DEFAULT,
			DEFAULT,
			DEFAULT,
			DEFAULT,
			DEFAULT
		)
	
	</insert>
	
	<insert id="insertBoardImg">
		INSERT INTO BOARD_IMG
		(
			BOARD_IMG_NO,
			BOARD_NO,
			CHANGE_NAME,
			IMG_PATH
		) VALUES
		(
			SEQ_BOARD_IMG_NO.NEXTVAL,
			#{boardNo},
			#{changeName},
			#{imgPath}
		)
	</insert>

	<update id="updateBoard">
		UPDATE BOARD
		SET CATEGORY_NO = #{categoryNo},
			TRADE_CATEGORY_NO = #{tradeCategoryNo},
			PRODUCT_NAME = #{productName},
			PRICE = #{price},
			CONDITION = #{condition},
			CONTENT = #{content},
			MODIFY_DATE = DEFAULT
		WHERE BOARD_NO = #{boardNo}
	</update>

	<select id="selectBoardImg" resultType="boardImg">
		SELECT *
		FROM BOARD_IMG_NO
		WHERE BOARD_NO = #{boardNo}
	</select>

	<update id="updateBoardImg">
		UPDATE BOARD_IMG
		SET STATUS = 'N',
			MODIFY_DATE = DEFAULT
		WHERE CHANGE_NAME = #{fileName}
	</update>
	
	<select id="selectCategoryName" resultType="string">
		SELECT CATEGORY_NAME
		FROM CATEGORY
		WHERE CATEGORY_NO = #{category}
	</select>
	
	
	<select id="selectListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
		<choose>
			<when test="search != null and search != ''">
			AND 
				PRODUCT_NAME LIKE '%' || #{search} || '%'
			</when>
			<when test="category != null and category != ''">
			AND 
				CATEGORY_NO = #{category}
			</when>
		</choose>

	</select>
	
	<resultMap type="boardExt" id="boardExtMap">
		<id column="BOARD_NO" property="boardNo"/>
		<result column="CATEGORY_NO" property="categoryNo"/>
		<result column="PRODUCT_NAME" property="productName"/>
		<result column="PRICE" property="price"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="CONTENT" property="content"/>
		<result column="BOARD_WRITER" property="boardWriter"/>
		<result column="TRADE_CATEGORY_NO" property="tradeCategoryNo"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="ID" property="id"/>
		<result column="COUNT" property="count"/>
		
		<collection property="biList" javaType="List" ofType="boardImg">
			<id column="BOARD_IMG_NO" property="boardImgNo"/>
			<result column="IMG_PATH" property="imgPath"/>
			<result column="CHANGE_NAME" property="changeName"/>
		</collection>
		
	</resultMap>
	
	<select id="selectBoardList" resultMap="boardExtMap">
		SELECT
		  B.BOARD_NO AS BOARD_NO,
		  PRODUCT_NAME,
		  PRICE,
		  B.CREATE_DATE AS CREATE_DATE,
		  
		  BOARD_IMG_NO,
		  IMG_PATH,
		  CHANGE_NAME
		  
		FROM BOARD "B" 
		LEFT JOIN BOARD_IMG "BI"
		ON (B.BOARD_NO = BI.BOARD_NO)
		WHERE B.STATUS = 'Y'
		  AND BI.STATUS = 'Y'
		<!-- 카테고리 or 검색 결과 -->
		<choose>
			<when test="search != null and search !=''">
				AND PRODUCT_NAME LIKE '%' || #{search} || '%'
			</when>
			<when test="category != null and category !=''">
				AND CATEGORY_NO = #{category}
			</when>
		</choose>

	</select>
	
	<!-- 조회수 증가 로직  -->
	<update id="increaseCount">
		UPDATE BOARD
		SET COUNT = COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 상세조회시 게시글 내용 -->
	<select id="selectBoard" resultMap="boardExtMap">
		SELECT
		  B.BOARD_NO AS BOARD_NO,
		  CATEGORY_NO,
		  PRODUCT_NAME,
		  PRICE,
		  CONTENT,
		  B.CREATE_DATE AS CREATE_DATE,
		  BOARD_WRITER,
		  COUNT,
		  TRADE_CATEGORY_NO,
		  
		  BOARD_IMG_NO,
		  IMG_PATH,
		  CHANGE_NAME
		FROM BOARD "B" 
		LEFT JOIN BOARD_IMG "BI"
		ON (B.BOARD_NO = BI.BOARD_NO)
		WHERE B.STATUS = 'Y' AND B.BOARD_NO = #{boardNo}
	</select>
	
	
	<!-- 게시글이 받은 찜수 조회 -->
	<select id="selectBoardFavCount" resultType="int">
		SELECT 
			COUNT(BOARD_NO)
		FROM FAVORITE_LIST
		WHERE BOARD_NO = ${boardNo}
	</select>
	
	
	<select id="selectRecommendBoard" resultMap="boardExtMap">
		<!-- group by 절을 이용해서 추천 게시글의 이미지를 1개만 가져왔다. -->
		SELECT * 
			FROM (
		        SELECT
		            B.BOARD_NO AS BOARD_NO,
		            PRODUCT_NAME,
		            BOARD_WRITER,
		            IMG_PATH,
		            MIN(BOARD_IMG_NO) AS BOARD_IMG_NO,
		            MIN(CHANGE_NAME) AS CHANGE_NAME
		        FROM BOARD "B"
		        LEFT JOIN BOARD_IMG "BI"
		            ON (B.BOARD_NO = BI.BOARD_NO)
		        WHERE 
		            B.STATUS = 'Y' 
		            AND (CATEGORY_NO = #{category} OR PRODUCT_NAME LIKE '%' || #{productName} || '%')
		            GROUP BY
		            B.BOARD_NO,
		            PRODUCT_NAME,
		            BOARD_WRITER,
		            IMG_PATH)
		     WHERE ROWNUM <![CDATA[ <= ]]> 4
		     AND BOARD_NO != #{boardNo}
	</select>
	
	<!-- 판매자의 판매중, 판매완료한 거래글의 개수 -->
	<select id="getSalesCount" resultType="map">
		SELECT 
		    COUNT(CASE WHEN (SALE_CONDITION ='Y') THEN 1 ELSE NULL END) AS SOLD_COUNT,
		    COUNT(CASE WHEN (SALE_CONDITION ='N') THEN 1 ELSE NULL END) AS SALE_COUNT
		FROM BOARD WHERE BOARD_WRITER = #{boardWriter}
	</select>
	
	<!-- 판매자가 받은 리뷰글의 개수 -->
	<select id="getReviewCount" resultType="int">
		SELECT COUNT(*)
        FROM
        (
	        SELECT MEMBER_NO, NICKNAME, B.BOARD_NO, PRODUCT_NAME, REVIEW_NO, R.BOARD_NO, REVIEW_MEMBER_NO
	            FROM MEMBER "M"
	        JOIN BOARD "B" ON (MEMBER_NO = BOARD_WRITER)
	        JOIN REVIEW "R" ON (B.BOARD_NO = R.BOARD_NO)
	        WHERE MEMBER_NO = #{boardWriter}
        )
	</select>
	

	<!-- 판매자가 판매중인 거래글 -->
	<select id="selectSellorBoard" resultMap="boardExtMap">
		<!-- group by 절을 이용해서 추천 게시글의 이미지를 1개만 가져왔다. -->
		SELECT * 
			FROM (
		        SELECT
		            B.BOARD_NO AS BOARD_NO,
		            PRODUCT_NAME,
		            PRICE,
		            BOARD_WRITER,
		            IMG_PATH,
		            MIN(BOARD_IMG_NO) AS BOARD_IMG_NO,
		            MIN(CHANGE_NAME) AS CHANGE_NAME
		        FROM BOARD "B"
		        LEFT JOIN BOARD_IMG "BI"
		            ON (B.BOARD_NO = BI.BOARD_NO)
		        WHERE 
		            B.STATUS = 'Y' 
		            GROUP BY
		            B.BOARD_NO,
		            PRODUCT_NAME,
		            PRICE,
		            BOARD_WRITER,
		            IMG_PATH)
		     WHERE ROWNUM <![CDATA[ <= ]]> 3
		     AND BOARD_NO != #{boardNo}
             AND BOARD_WRITER = #{boardWriter}
	</select>
	
	<select id="selectBoardListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
	</select>
</mapper>